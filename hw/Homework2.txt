///////////Exercises 2.3///////////
1.
    a. 
        sum = 0;
        for (int i = 1; i < 1000; i++)
        {
            if (i % 2 != 0)
                sum += i;
        }
        sum = 501498;
    b.
        sum = 0;
        for (int i = 2; i < 1025; i++)
        {
            if (i % 2 == 0)
                sum += i;
        }
        sum = 262656;
    c.
        n - 1
    d.
        (1/2) * n^2
    e.
        (1/3) * n^3
    f.
        (3^(n+1) - 1)/(a-1)
    g.
        i^(n+1) - 1
    

2.
    a.
        n^4
    b.
        lg(n^(2))
    c.
        (i - 2) * 2^i +2
    d. 
        i^2
4.
    a.
        sum of n^n
    b.
        addition and multiplication
    c.
        n - 1
    d.
        n
    e.
        go from 0 to n-1
        

5.
    a.
        difference between minimum and maximum values
    b.
        comparison
    c.
        2 *(n-1)
    d.
        n
    e.
        no suggestion; each array element needs to be checked against min and max value
//////////Exercises 2.4///////////
1
    a.
        x(n) = x(n - 1) + 5 for n > 1; x(1) = 0
        25

    b.
        x(n) = 3x(n - 1) for n > 1, x(1) = 4
        0
    d.
        x(n/2) + n for n > 1, x(1) = 1 (solve for n = 2^k)
        k(2^k)
4.
    b. 
        if (n == 1)
            return 1;
        else
            return Q(n-1) + 2n - 2;
        Set upa recurrence relation for this functions values and solve it to determine what this algorithm computes
    c.
        Set up a recurrence reltaion for tghe number of additions/subtractions made by this algorithm and solve it
9.
    Riddle(A[0..n-1])
    if (n = 1)
        return A[0];
    else if (temp == Riddle(A[0..n-2]))
        if (temp <= A[n-1])
            return temp;
        else
            return A[n - 1];
    a. What does this algorithm compute
        biggest integer in the array 
    b.
        set up a recurrence relation for the algorithms basic operation count and solve it

///////////EXERCIESES 3.1////////////
8.
    sort E X A M P L E with selection sort (alphabetical order)
    E X A M P L E 
    A X E M P L E 
    A E X M P L E 
    A E E M P L X 
    A E E L P M X 
    A E E L M P X
9.
    sort E X A M P L E with bubble sort (alphabetical order)
    E X A M P L E
    E A X M P L E 
    E A M X P L E 
    E A M P X L E 
    E A M P L X E 
    E A M P L E X 
    A E M P L E X 
    A E M L P E X 
    A E M L E P X 
    A E M E L P X 
    A E E M L P X 
    A E E L M P X 

///////////EXERCISES 3.2/////////////
1.
    a.
        n operations
    b. 
        i operations        